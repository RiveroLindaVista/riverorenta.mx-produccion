{"version":3,"file":"component---src-pages-nuevo-usuario-js-d4c55171500979f59bbf.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/validadores.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://gatsby-starter-default/./src/pages/nuevo-usuario.js"],"sourcesContent":["class Validador {\r\n    static _val = null\r\n\r\n    static get instance() {\r\n    if (Validador._val === null) {\r\n        Validador._val = new Validador()\r\n    }\r\n    return Validador._val\r\n    }\r\n    constructor() {\r\n\r\n    }\r\n\r\n    async ValidadorWhatsApp(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n\r\n        if(data === undefined || data === \"\"){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            if(data.length === 10){\r\n                nuevaData = 5;\r\n                nuevaBoolean = false;\r\n            } else {\r\n                nuevaData = 2;\r\n                nuevaBoolean = true;\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n        return params;\r\n    }\r\n\r\n    async ValidadorCorreo(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n        if(data === undefined || data === \"\"){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            let regexEmail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\r\n            let email = regexEmail.test(data);\r\n            if(email === true){\r\n                nuevaData = 5;\r\n                nuevaBoolean = false;\r\n            } else {\r\n                nuevaData = 1;\r\n                nuevaBoolean = true;\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    async ValidadorVIN(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n        console.log(\"Entra validador\")\r\n        if(data === undefined || data === \"\"){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            if(data.length === 8){\r\n                nuevaData = 5;\r\n                nuevaBoolean = false;\r\n            } else {\r\n                nuevaData = 3;\r\n                nuevaBoolean = true;\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n        return params;\r\n    }\r\n\r\n    async ValidadorRFC(RFC, Regimen){\r\n        let nuevaData = 0;\r\n        let nuevaBooleanRFC = false;\r\n        let nuevaBooleanRegimen = false;\r\n\r\n        if(Regimen === \"Selecciona\"){\r\n            nuevaData = 8;\r\n            nuevaBooleanRegimen = true;\r\n        } else if (Regimen === \"Física\") {\r\n            nuevaBooleanRegimen = false;\r\n            if(RFC === \"\" || RFC === undefined){\r\n                console.log(\"llega aquí vacio\")\r\n                nuevaData = 0;\r\n                nuevaBooleanRFC = true;\r\n            } else {\r\n                console.log(\"llega aquí tiene valores\")\r\n                if(RFC.length === 13){\r\n                    nuevaData = 5;\r\n                    nuevaBooleanRFC = false;\r\n                } else {\r\n                    nuevaData = 9;\r\n                    nuevaBooleanRFC = true;\r\n                }\r\n            }\r\n        } else if (Regimen === \"Moral\") {\r\n            nuevaBooleanRegimen = false;\r\n            if(RFC === \"\" || RFC === undefined){\r\n                nuevaData = 0;\r\n                nuevaBooleanRFC = true;\r\n            } else {\r\n                if(RFC.length === 12){\r\n                    nuevaData = 5;\r\n                    nuevaBooleanRFC = false;\r\n                } else {\r\n                    nuevaData = 9;\r\n                    nuevaBooleanRFC = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            booleanRFC: nuevaBooleanRFC,\r\n            booleanRegimen: nuevaBooleanRegimen\r\n        }\r\n\r\n        return params;\r\n\r\n    }\r\n\r\n    async ValidadorGenero(data){\r\n        //console.log(\"Estamos en el ValidadorGenero: \", data);\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n\r\n        if(data === \"Selecciona\"){\r\n            nuevaData = 8;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            nuevaData = 5;\r\n            nuevaBoolean = false;\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean\r\n        }\r\n        return params;\r\n    }\r\n\r\n    async ValidadorNombre(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n\r\n        if(data === \"\" || data === undefined){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            nuevaData = 5;\r\n            nuevaBoolean = false;\r\n        }\r\n\r\n        let params ={\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n        return params\r\n    }\r\n\r\n    // Validador de campos tipo formularios\r\n    async ValidadorCamposFacturacion(data){\r\n        let nuevaData = 0;\r\n        //console.log(\"Recibo lo siguiente aquí\", data);\r\n\r\n        if(data.Calle === \"\" || data.Celular === \"\" || data.Colonia === \"\" || data.Correo === \"\" || data.Nombre === \"\" || data.RFC === \"\" || data.Telefono === \"\"|| data.CodigoP === \"\"){\r\n            nuevaData = 0;\r\n        } else {\r\n            nuevaData = 5;\r\n        }\r\n\r\n        return nuevaData;\r\n    }\r\n\r\n    async ValidadorCamposNuevoUsuario(data){\r\n        let jijiData = 5;\r\n\r\n        let ValNombre = await this.ValidadorNombre(data.Nombre);\r\n        let ValCorreo = await this.ValidadorCorreo(data.Correo);\r\n        let VaCelular = await this.ValidadorWhatsApp(data.Celular);\r\n        let VaRFC = await this.ValidadorRFC(data.RFC, data.Regimen);\r\n        let VaGenero = await this.ValidadorGenero(data.Genero);\r\n\r\n        let ValCalle = await this.ValidadorNombre(data.Calle);\r\n        let ValNumero = await this.ValidadorNombre(data.Numero);\r\n        let ValColonia = await this.ValidadorNombre(data.Colonia);\r\n        let ValCPostal = await this.ValidadorNombre(data.CPostal);\r\n\r\n        if(ValNombre.data === 0 || ValCorreo.data === 0 || VaCelular.data === 0 || VaRFC.data === 0 || ValCalle.data === 0 || ValNumero.data === 0 || ValColonia.data === 0 || ValCPostal.data === 0){\r\n            jijiData = 0;\r\n        } else {\r\n            if(ValCorreo.data === 1){ jijiData = ValCorreo.data; } \r\n            else if(VaCelular.data === 2) { jijiData = VaCelular.data; }\r\n            else if(VaRFC.data === 8 || VaRFC.data === 9) { jijiData = VaRFC.data; }\r\n            else if(VaGenero.data === 8) { jijiData = VaGenero.data; }\r\n        } \r\n\r\n        let nuevaData = {\r\n            error: jijiData,\r\n            nombre: ValNombre,\r\n            correo: ValCorreo,\r\n            celular: VaCelular,\r\n            rfc: VaRFC,\r\n            genero: VaGenero,\r\n            calle: ValCalle,\r\n            numero: ValNumero,\r\n            colonia: ValColonia,\r\n            cpostal: ValCPostal\r\n        };\r\n\r\n        return nuevaData;\r\n    }\r\n\r\n    async ValidadorCamposDatosAutos(data){\r\n        //console.log(\"Tengo lo siguiente jiji, \", data);\r\n        let ErrorJiji = 0;\r\n\r\n        let valColor = await this.ValidadorNombre(data.Color);\r\n        let valAnio = await this.ValidadorNombre(data.Anio);\r\n        let valVIN = await this.ValidadorNombre(data.VINDatos);\r\n        let valPlacas = await this.ValidadorNombre(data.Placas);\r\n        let valKilometraje = await this.ValidadorNombre(data.Kilometraje);\r\n\r\n        if(valColor.data === 0 || valAnio.data === 0 || valVIN.data === 0 || valPlacas.data === 0 || valKilometraje.data === 0) {\r\n            ErrorJiji = 0;\r\n        } else {\r\n            ErrorJiji = 5;\r\n        }\r\n\r\n        let params = {\r\n            error: ErrorJiji,\r\n            color: valColor,\r\n            anio: valAnio,\r\n            vin: valVIN,\r\n            placas: valPlacas,\r\n            kilometraje: valKilometraje,\r\n        }\r\n\r\n        return params;\r\n\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Validador.instance","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Col, Row, Container, Button, Form } from \"react-bootstrap\";\r\nimport { navigate } from \"gatsby\";\r\n\r\nimport Layout from \"../components/layout.js\";\r\nimport val from \"../components/validadores\";\r\nimport Seo from \"../components/seo\";\r\nimport Keyboards from \"../components/Keyboards.js\";\r\nimport \"../components/pages-css/sCita.css\";\r\nimport VideoSeccion from \"../components/videoSeccion.js\";\r\nimport ModalEmergente from \"../components/ModalEmergente.js\";\r\nimport Timer from \"../components/timer.js\";\r\nimport api from \"../components/actions/riveroapi\";\r\n\r\nexport default function NuevoUsuario(){\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [modal, setModal] = useState(false);\r\n    const [error, setError] = useState(0);\r\n    const [errorInput, setErrorInput] = useState(false);\r\n    const [formInputError, setFormInputError] = useState({\r\n        Nombreform: false,\r\n        Correoform: false,\r\n        Celularform: false,\r\n        Regimenform: false,\r\n        RFCform: false,\r\n        Fnacimientoform: false, \r\n        Generoform: false,\r\n        Calleform: false,\r\n        Numeroform: false,\r\n        Coloniaform: false,\r\n        CPostalform: false,\r\n    })\r\n    const [click, setClick] = useState(false);\r\n  \r\n    const [optionsKeyboard, setOptionsKeyboard] = useState({\r\n      inpName: \"\",\r\n      layoName: \"default\",\r\n      name: \"\",\r\n      value: {\r\n        NombreNuevo: undefined,\r\n        CorreoNuevo: undefined,\r\n        RFCNuevo: undefined,\r\n        CelularNuevo: undefined,\r\n        TelefonoNuevo: undefined,\r\n        fNacimiento: undefined,\r\n        ColoniaNuevo: undefined,\r\n        NumeroNuevo: undefined,\r\n        CalleNuevo: undefined,\r\n        CodigoPNuevo: undefined,\r\n      }\r\n    })\r\n\r\n    const [select, setSelect] = useState({\r\n        regimen: undefined,\r\n        genero: undefined,\r\n        fNacimiento: undefined,\r\n    })\r\n\r\n    const [entidad, setEntidad] = useState({\r\n        estado: \"\",\r\n        municipio: \"\"\r\n    })\r\n\r\n    const [inputEsMuni, setInputEsMuni] = useState({\r\n        estados: {},\r\n        ciudades: {}\r\n    })\r\n\r\n    const refForm = useRef();\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== 'undefined') {\r\n            console.log('we are running on the client');\r\n            setOptionsKeyboard({\r\n                ...optionsKeyboard,\r\n                value: {\r\n                    NombreNuevo: localStorage.getItem('NombreNuevo') || \"\",\r\n                    CorreoNuevo: localStorage.getItem('CorreoNuevo') || \"\",\r\n                    RFCNuevo: localStorage.getItem('RFCNuevo') || \"\",\r\n                    CelularNuevo: localStorage.getItem('CelularNuevo') || \"\",\r\n                    TelefonoNuevo: localStorage.getItem('TelefonoNuevo') || \"\",\r\n                    fNacimiento: localStorage.getItem('fNacimiento') || \"\",\r\n                    ColoniaNuevo: localStorage.getItem('ColoniaNuevo') || \"\",\r\n                    NumeroNuevo: localStorage.getItem('NumeroNuevo') || \"\",\r\n                    CalleNuevo: localStorage.getItem('CalleNuevo') || \"\",\r\n                    CodigoPNuevo: localStorage.getItem('CodigoPNuevo') || \"\"\r\n                }\r\n            })\r\n            setSelect({\r\n                ...select,\r\n                regimen: localStorage.getItem('regimen') || \"\",\r\n                genero: localStorage.getItem('genero') || \"\",\r\n                fNacimiento: localStorage.getItem('fNacimiento') || \"\",\r\n            })\r\n            const paramLocal = {\r\n                ParamEstado: \"Nuevo León\",\r\n                ParamMuni: \"\"\r\n            }\r\n            Estados(paramLocal);\r\n        } else {\r\n            console.log('we are running on the server');\r\n        }\r\n    }, [])\r\n\r\n    function Estados(data){\r\n\r\n        console.log(\"Recibo: \", data);\r\n\r\n        var miCadena = data.ParamEstado?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\r\n        var datos = miCadena || \"nuevo leon\";\r\n        var minusculas = datos.toLowerCase();\r\n    \r\n        var cadenaMuni = data.ParamMuni.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\r\n        var minusculaMuni = cadenaMuni.toLowerCase();\r\n    \r\n        api.getMunicipios(minusculas).then((respEst) => {\r\n    \r\n            console.log(\"Tengo los estados: \", respEst);\r\n\r\n            const mapEstado = respEst.estados.map((obj) => {\r\n                var minusEstados = obj.toLowerCase();\r\n                var normaEstados = minusEstados?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\r\n    \r\n                if(normaEstados === minusculas){\r\n                    return obj;\r\n                } else {\r\n                }\r\n            });\r\n    \r\n            var filterEstado = mapEstado.filter(function(x) {\r\n                return x !== undefined;\r\n            });\r\n\r\n            const mapMunicipio = respEst.ciudades.map((obj) => {\r\n                var minusMun = obj.toLowerCase();\r\n                var normaMuni = minusMun?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\r\n    \r\n                if(normaMuni === minusculaMuni){\r\n                    return obj;\r\n                } else {\r\n                }\r\n            \r\n            })\r\n    \r\n            var filterMunicipio = mapMunicipio.filter(function(x) {\r\n                return x !== undefined;\r\n            });\r\n\r\n            setEntidad({\r\n                ...entidad,\r\n                estado: filterEstado[0],\r\n                municipio: filterMunicipio[0]\r\n            })\r\n    \r\n            setInputEsMuni({\r\n                ...inputEsMuni,\r\n                estados: respEst.estados,\r\n                ciudades: respEst.ciudades\r\n            })\r\n  \r\n        })\r\n    }\r\n\r\n    async function continuar(){\r\n\r\n        var params = {\r\n            Nombre: optionsKeyboard.value.NombreNuevo,\r\n            Correo: optionsKeyboard.value.CorreoNuevo,\r\n            Regimen: select.regimen,\r\n            RFC: optionsKeyboard.value.RFCNuevo,\r\n            Celular: optionsKeyboard.value.CelularNuevo,\r\n            Telefono: optionsKeyboard.value.TelefonoNuevo,\r\n            Nacimiento: select.fNacimiento,\r\n            Genero: select.genero,\r\n            Colonia: optionsKeyboard.value.ColoniaNuevo,\r\n            Numero: optionsKeyboard.value.NumeroNuevo,\r\n            Calle: optionsKeyboard.value.CalleNuevo,\r\n            CPostal: optionsKeyboard.value.CodigoPNuevo,\r\n        }\r\n\r\n        val.ValidadorCamposNuevoUsuario(params).then((resp) => {\r\n\r\n            setFormInputError({\r\n                ...formInputError,\r\n                Nombreform: resp.nombre.boolean,\r\n                Correoform: resp.correo.boolean,\r\n                Celularform: resp.celular.boolean,\r\n                Regimenform: resp.rfc.booleanRegimen,\r\n                RFCform: resp.rfc.booleanRFC,\r\n                Generoform: resp.genero.boolean,\r\n                Calleform: resp.calle.boolean,\r\n                Numeroform: resp.numero.boolean,\r\n                Coloniaform: resp.colonia.boolean,\r\n                CPostalform: resp.cpostal.boolean\r\n            })\r\n\r\n            if(resp.error === 0 || resp.error === 1 || resp.error === 2 || resp.error === 8 || resp.error === 9){\r\n                setError(resp.error);\r\n                setModal(true);\r\n            } else if (resp.error === 5) {\r\n\r\n                var tel =  optionsKeyboard.value.TelefonoNuevo || \"\";\r\n\r\n                const params = {\r\n                    data: {},\r\n                    id: 0,\r\n                    codigo: 0,\r\n                    datosCliente: {\r\n                        Nombre: optionsKeyboard.value.NombreNuevo,\r\n                        RFC: optionsKeyboard.value.RFCNuevo,\r\n                        DiaNacimiento: select.fNacimiento,\r\n                    },\r\n                    direccionCliente: {\r\n                        Calle: optionsKeyboard.value.CalleNuevo,\r\n                        Numero: optionsKeyboard.value.NumeroNuevo,\r\n                        Colonia: optionsKeyboard.value.ColoniaNuevo,\r\n                        CodigoPostal: optionsKeyboard.value.CodigoPNuevo,\r\n                        Estado: entidad.estado,\r\n                        Municipio: entidad.municipio,\r\n                        Pais: \"MEXICO\"\r\n                    },\r\n                    clienteContacto: {\r\n                        Celular: optionsKeyboard.value.CelularNuevo,\r\n                        Telefono: tel,\r\n                        Correo: optionsKeyboard.value.CorreoNuevo,\r\n                        Preferencia: \"WhatsApp\"\r\n                    },\r\n                  }\r\n                \r\n                navigate(\"/registrar-vehiculo\");\r\n                localStorage.setItem(\"RutaNavegacion\", \"nuevo-usuario\");\r\n                localStorage.setItem(\"informacion\", JSON.stringify(params));\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Layout backUrl={\"/\"}>\r\n            <Seo title=\"Auto servicio\" />\r\n            <Container className=\"container-sin-cita\" onClick={() => {setClick(true)}}>\r\n            {<Timer click={click} setClick={setClick} setError={setError} setModal={setModal}/>}\r\n                <Row className=\"row-cita-arriba\">\r\n                    <form className=\"container-cita\" style={{overflowY: 'scroll', height: '100%'}}>\r\n                        <Row>\r\n                            <Col className=\"titulo-cita\"><h1 className=\"titulo-h1\" style={{marginTop: '0.8rem'}}>Datos del usuario</h1></Col>\r\n                        </Row>\r\n                        <Row className=\"titulo-cita\">\r\n                            <h3 className=\"titulo-h1\" style={{marginTop: '0.6rem', marginBottom: '0.6rem'}}>Cliente</h3>\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col lg={4}>\r\n                                        Nombre completo:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.Nombreform === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"NombreNuevo\"})}\r\n                                        value={optionsKeyboard.value.NombreNuevo || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col lg={4}>\r\n                                        Correo electrónico:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.Correoform === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"CorreoNuevo\"})}\r\n                                        value={optionsKeyboard.value.CorreoNuevo || \"\"}\r\n                                    />\r\n                                    </Col>\r\n                                    <Col lg={2}>\r\n                                        <div style={{paddingBottom:10}}>Tipo de regimen: </div>\r\n                                            <Form.Select\r\n                                            aria-label=\"Default select example\"\r\n                                            id={formInputError.Regimenform === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => {\r\n                                                console.log(\"Estamos en el select de regimen\", e.target.value)\r\n                                                setSelect({\r\n                                                ...select,\r\n                                                regimen: e.target.value\r\n                                                });\r\n                                            }}\r\n                                            value={select.regimen}\r\n                                        >\r\n                                            <option value=\"Selecciona\">Selecciona</option>\r\n                                            <option value=\"Física\">Física</option>\r\n                                            <option value=\"Moral\">Moral</option>\r\n                                        </Form.Select>\r\n                                    </Col>\r\n                                    <Col lg={2}>\r\n                                        RFC:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.RFCform === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"vin\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"RFCNuevo\"})}\r\n                                        value={optionsKeyboard.value.RFCNuevo || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg={3}>\r\n                                        Celular:\r\n                                        <input\r\n                                            autoComplete=\"off\"\r\n                                            type=\"text\"\r\n                                            id={formInputError.Celularform === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                            className=\"form-control\"\r\n                                            onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\r\n                                            onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"CelularNuevo\"})}\r\n                                            value={optionsKeyboard.value.CelularNuevo || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col lg={3}>\r\n                                        Teléfono:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"TelefonoNuevo\"})}\r\n                                        value={optionsKeyboard.value.TelefonoNuevo || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col lg={3}>\r\n                                        Fecha de nacimiento:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"date\"\r\n                                        id=\"inputContacto\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                        //console.log(\"Selecciono la fecha: \", e.target.value)\r\n                                        setSelect({\r\n                                            ...select,\r\n                                            fNacimiento: e.target.value\r\n                                            })\r\n                                        }}\r\n                                        value={select.fNacimiento}\r\n                                    />\r\n                                    </Col>\r\n                                    <Col lg={3}>\r\n                                        <div style={{paddingBottom:10}}>Genero: </div>\r\n                                            <Form.Select\r\n                                            aria-label=\"Default select example\"\r\n                                            id={formInputError.Generoform === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => {\r\n                                            console.log(\"Selecciono la fecha: \", e.target.value)\r\n                                            setSelect({\r\n                                            ...select,\r\n                                            genero: e.target.value\r\n                                            })\r\n                                            }}\r\n                                            value={select.genero}\r\n                                            >\r\n                                                <option>Selecciona</option>\r\n                                                <option value=\"Hombre\">Hombre</option>\r\n                                                <option value=\"Mujer\">Mujer</option>\r\n                                            </Form.Select>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </Row>\r\n                        <Row className=\"titulo-cita\">\r\n                            <h3 className=\"titulo-h1\" style={{marginTop: '0.6rem', marginBottom: '0.6rem'}}>Domicilio</h3>\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col lg={4}>\r\n                                        Calle:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.Calleform === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"CalleNuevo\"})}\r\n                                        value={optionsKeyboard.value.CalleNuevo || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col lg={4}>\r\n                                        Número:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.Numeroform === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"NumeroNuevo\"})}\r\n                                        value={optionsKeyboard.value.NumeroNuevo || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col lg={4}>\r\n                                        Colonia:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.Coloniaform === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"ColoniaNuevo\"})}\r\n                                        value={optionsKeyboard.value.ColoniaNuevo || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg={4}>\r\n                                        <div style={{paddingBottom:10}}>Estado: </div>\r\n                                        <Form.Select\r\n                                            aria-label=\"Default select example\"\r\n                                            id=\"inputContacto\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => {\r\n                                                const paramLocal = {\r\n                                                    ParamEstado: e.target.value,\r\n                                                    ParamMuni: \"\"\r\n                                                }\r\n\r\n                                                Estados(paramLocal);\r\n                                            }}\r\n                                            value={entidad.estado}\r\n                                        >\r\n                                            <option value=\"Selecciona\">Seleccionar</option>\r\n                                            {inputEsMuni && inputEsMuni.estados && inputEsMuni.estados.length > 0 ? (\r\n                                                inputEsMuni.estados.map((obj, i) => {\r\n                                                    //console.log(\"Tengo: \", obj);\r\n                                                    return(\r\n                                                        <>\r\n                                                            <option value={obj}>{obj}</option>\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            ) : null\r\n                                            }\r\n                                        </Form.Select>\r\n                                    </Col>\r\n                                    <Col lg={4}>\r\n                                        <div style={{paddingBottom:10}}>Municipio: </div>\r\n                                        <Form.Select\r\n                                            aria-label=\"Default select example\"\r\n                                            id=\"inputContacto\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => {\r\n                                                setEntidad({\r\n                                                    ...entidad,\r\n                                                    municipio: e.target.value\r\n                                                })\r\n                                            }}\r\n                                            value={entidad.municipio}\r\n                                        >\r\n                                            <option value=\"Selecciona\">Seleccionar</option>\r\n                                            {inputEsMuni && inputEsMuni.ciudades && inputEsMuni.ciudades.length > 0 ? (\r\n                                                inputEsMuni.ciudades.map((obj, i) => {\r\n                                                    //console.log(\"Tengo: \", obj);\r\n                                                    return(\r\n                                                        <>\r\n                                                            <option value={obj}>{obj}</option>\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            ) : null\r\n                                            }\r\n                                        </Form.Select>\r\n                                    </Col>\r\n                                    <Col lg={4}>\r\n                                        Código postal:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.CPostalform === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"CodigoPNuevo\"})}\r\n                                        value={optionsKeyboard.value.CodigoPNuevo || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </Row>\r\n                        {show === true ?\r\n                            <center className=\"pt-3\">\r\n                                <Keyboards options={optionsKeyboard} setOptionsKeyboard={setOptionsKeyboard} optionsKeyboard={optionsKeyboard}/>\r\n                            </center>\r\n                        : null }\r\n                    </form>\r\n                </Row>\r\n                <Button ref={refForm} onClick={() => continuar()} style={{display: 'none'}}></Button>\r\n                <Row className=\"row-cita-abajo\">\r\n                    <VideoSeccion refForm={refForm} none=\"tiene\"/>\r\n                </Row>\r\n            </Container>\r\n            <ModalEmergente modal={modal} error={error} setModal={setModal} setClick={setClick}/>\r\n        </Layout>\r\n    )\r\n\r\n}"],"names":["Validador","ValidadorWhatsApp","data","nuevaData","nuevaBoolean","undefined","length","params","boolean","ValidadorCorreo","test","ValidadorVIN","console","log","ValidadorRFC","RFC","Regimen","nuevaBooleanRFC","nuevaBooleanRegimen","booleanRFC","booleanRegimen","ValidadorGenero","ValidadorNombre","ValidadorCamposFacturacion","Calle","Celular","Colonia","Correo","Nombre","Telefono","CodigoP","ValidadorCamposNuevoUsuario","jijiData","this","ValNombre","ValCorreo","VaCelular","VaRFC","Genero","VaGenero","ValCalle","Numero","ValNumero","ValColonia","CPostal","ValCPostal","error","nombre","correo","celular","rfc","genero","calle","numero","colonia","cpostal","ValidadorCamposDatosAutos","ErrorJiji","Color","valColor","Anio","valAnio","VINDatos","valVIN","Placas","valPlacas","Kilometraje","valKilometraje","color","anio","vin","placas","kilometraje","_val","module","exports","instance","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","NuevoUsuario","useState","show","setShow","modal","setModal","setError","errorInput","Nombreform","Correoform","Celularform","Regimenform","RFCform","Fnacimientoform","Generoform","Calleform","Numeroform","Coloniaform","CPostalform","formInputError","setFormInputError","click","setClick","inpName","layoName","name","NombreNuevo","CorreoNuevo","RFCNuevo","CelularNuevo","TelefonoNuevo","fNacimiento","ColoniaNuevo","NumeroNuevo","CalleNuevo","CodigoPNuevo","optionsKeyboard","setOptionsKeyboard","regimen","select","setSelect","estado","municipio","entidad","setEntidad","estados","ciudades","inputEsMuni","setInputEsMuni","refForm","useRef","Estados","minusculas","ParamEstado","normalize","replace","toLowerCase","minusculaMuni","ParamMuni","api","respEst","filterEstado","map","obj","minusEstados","filter","x","filterMunicipio","minusMun","Nacimiento","val","resp","tel","id","codigo","datosCliente","DiaNacimiento","direccionCliente","CodigoPostal","Estado","Municipio","Pais","clienteContacto","Preferencia","navigate","localStorage","setItem","JSON","stringify","useEffect","window","getItem","backUrl","title","Container","className","onClick","Row","style","overflowY","height","Col","marginTop","marginBottom","lg","autoComplete","type","onFocus","paddingBottom","Form","onChange","e","target","i","Keyboards","options","Button","ref","continuar","display","none","ModalEmergente"],"sourceRoot":""}