{"version":3,"file":"component---src-pages-datos-facturacion-js-f3466c331478fee22179.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/validadores.js","webpack://gatsby-starter-default/./src/pages/datos-facturacion.js"],"sourcesContent":["class Validador {\r\n    static _val = null\r\n\r\n    static get instance() {\r\n    if (Validador._val === null) {\r\n        Validador._val = new Validador()\r\n    }\r\n    return Validador._val\r\n    }\r\n    constructor() {\r\n\r\n    }\r\n\r\n    async ValidadorWhatsApp(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n\r\n        if(data === undefined || data === \"\"){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            if(data.length === 10){\r\n                nuevaData = 5;\r\n                nuevaBoolean = false;\r\n            } else {\r\n                nuevaData = 2;\r\n                nuevaBoolean = true;\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n        return params;\r\n    }\r\n\r\n    async ValidadorCorreo(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n        if(data === undefined || data === \"\"){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            let regexEmail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\r\n            let email = regexEmail.test(data);\r\n            if(email === true){\r\n                nuevaData = 5;\r\n                nuevaBoolean = false;\r\n            } else {\r\n                nuevaData = 1;\r\n                nuevaBoolean = true;\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    async ValidadorVIN(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n        console.log(\"Entra validador\")\r\n        if(data === undefined || data === \"\"){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            if(data.length === 8){\r\n                nuevaData = 5;\r\n                nuevaBoolean = false;\r\n            } else {\r\n                nuevaData = 3;\r\n                nuevaBoolean = true;\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n        return params;\r\n    }\r\n\r\n    async ValidadorRFC(RFC, Regimen){\r\n        let nuevaData = 0;\r\n        let nuevaBooleanRFC = false;\r\n        let nuevaBooleanRegimen = false;\r\n\r\n        if(Regimen === \"Selecciona\"){\r\n            nuevaData = 8;\r\n            nuevaBooleanRegimen = true;\r\n        } else if (Regimen === \"Física\") {\r\n            nuevaBooleanRegimen = false;\r\n            if(RFC === \"\" || RFC === undefined){\r\n                console.log(\"llega aquí vacio\")\r\n                nuevaData = 0;\r\n                nuevaBooleanRFC = true;\r\n            } else {\r\n                console.log(\"llega aquí tiene valores\")\r\n                if(RFC.length === 13){\r\n                    nuevaData = 5;\r\n                    nuevaBooleanRFC = false;\r\n                } else {\r\n                    nuevaData = 9;\r\n                    nuevaBooleanRFC = true;\r\n                }\r\n            }\r\n        } else if (Regimen === \"Moral\") {\r\n            nuevaBooleanRegimen = false;\r\n            if(RFC === \"\" || RFC === undefined){\r\n                nuevaData = 0;\r\n                nuevaBooleanRFC = true;\r\n            } else {\r\n                if(RFC.length === 12){\r\n                    nuevaData = 5;\r\n                    nuevaBooleanRFC = false;\r\n                } else {\r\n                    nuevaData = 9;\r\n                    nuevaBooleanRFC = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            booleanRFC: nuevaBooleanRFC,\r\n            booleanRegimen: nuevaBooleanRegimen\r\n        }\r\n\r\n        return params;\r\n\r\n    }\r\n\r\n    async ValidadorGenero(data){\r\n        //console.log(\"Estamos en el ValidadorGenero: \", data);\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n\r\n        if(data === \"Selecciona\"){\r\n            nuevaData = 8;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            nuevaData = 5;\r\n            nuevaBoolean = false;\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean\r\n        }\r\n        return params;\r\n    }\r\n\r\n    async ValidadorNombre(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n\r\n        if(data === \"\" || data === undefined){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            nuevaData = 5;\r\n            nuevaBoolean = false;\r\n        }\r\n\r\n        let params ={\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n        return params\r\n    }\r\n\r\n    // Validador de campos tipo formularios\r\n    async ValidadorCamposFacturacion(data){\r\n        let nuevaData = 0;\r\n        //console.log(\"Recibo lo siguiente aquí\", data);\r\n\r\n        if(data.Calle === \"\" || data.Celular === \"\" || data.Colonia === \"\" || data.Correo === \"\" || data.Nombre === \"\" || data.RFC === \"\" || data.Telefono === \"\"|| data.CodigoP === \"\"){\r\n            nuevaData = 0;\r\n        } else {\r\n            nuevaData = 5;\r\n        }\r\n\r\n        return nuevaData;\r\n    }\r\n\r\n    async ValidadorCamposNuevoUsuario(data){\r\n        let jijiData = 5;\r\n\r\n        let ValNombre = await this.ValidadorNombre(data.Nombre);\r\n        let ValCorreo = await this.ValidadorCorreo(data.Correo);\r\n        let VaCelular = await this.ValidadorWhatsApp(data.Celular);\r\n        let VaRFC = await this.ValidadorRFC(data.RFC, data.Regimen);\r\n        let VaGenero = await this.ValidadorGenero(data.Genero);\r\n\r\n        let ValCalle = await this.ValidadorNombre(data.Calle);\r\n        let ValNumero = await this.ValidadorNombre(data.Numero);\r\n        let ValColonia = await this.ValidadorNombre(data.Colonia);\r\n        let ValCPostal = await this.ValidadorNombre(data.CPostal);\r\n\r\n        if(ValNombre.data === 0 || ValCorreo.data === 0 || VaCelular.data === 0 || VaRFC.data === 0 || ValCalle.data === 0 || ValNumero.data === 0 || ValColonia.data === 0 || ValCPostal.data === 0){\r\n            jijiData = 0;\r\n        } else {\r\n            if(ValCorreo.data === 1){ jijiData = ValCorreo.data; } \r\n            else if(VaCelular.data === 2) { jijiData = VaCelular.data; }\r\n            else if(VaRFC.data === 8 || VaRFC.data === 9) { jijiData = VaRFC.data; }\r\n            else if(VaGenero.data === 8) { jijiData = VaGenero.data; }\r\n        } \r\n\r\n        let nuevaData = {\r\n            error: jijiData,\r\n            nombre: ValNombre,\r\n            correo: ValCorreo,\r\n            celular: VaCelular,\r\n            rfc: VaRFC,\r\n            genero: VaGenero,\r\n            calle: ValCalle,\r\n            numero: ValNumero,\r\n            colonia: ValColonia,\r\n            cpostal: ValCPostal\r\n        };\r\n\r\n        return nuevaData;\r\n    }\r\n\r\n    async ValidadorCamposDatosAutos(data){\r\n        //console.log(\"Tengo lo siguiente jiji, \", data);\r\n        let ErrorJiji = 0;\r\n\r\n        let valColor = await this.ValidadorNombre(data.Color);\r\n        let valAnio = await this.ValidadorNombre(data.Anio);\r\n        let valVIN = await this.ValidadorNombre(data.VINDatos);\r\n        let valPlacas = await this.ValidadorNombre(data.Placas);\r\n        let valKilometraje = await this.ValidadorNombre(data.Kilometraje);\r\n\r\n        if(valColor.data === 0 || valAnio.data === 0 || valVIN.data === 0 || valPlacas.data === 0 || valKilometraje.data === 0) {\r\n            ErrorJiji = 0;\r\n        } else {\r\n            ErrorJiji = 5;\r\n        }\r\n\r\n        let params = {\r\n            error: ErrorJiji,\r\n            color: valColor,\r\n            anio: valAnio,\r\n            vin: valVIN,\r\n            placas: valPlacas,\r\n            kilometraje: valKilometraje,\r\n        }\r\n\r\n        return params;\r\n\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Validador.instance","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Col, Row, Container, Button, Form } from \"react-bootstrap\";\r\nimport { navigate } from \"gatsby\";\r\n\r\nimport Layout from \"../components/layout.js\";\r\nimport Seo from \"../components/seo\";\r\nimport Keyboards from \"../components/Keyboards.js\";\r\nimport \"../components/pages-css/sCita.css\";\r\nimport VideoSeccion from \"../components/videoSeccion.js\";\r\nimport ModalEmergente from \"../components/ModalEmergente.js\";\r\nimport val from \"../components/validadores\";\r\nimport api from \"../components/actions/riveroapi\";\r\nimport Timer from \"../components/timer.js\";\r\n\r\nexport default function DatosFacturacion() {\r\n  const [show, setShow] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [error, setError] = useState(0);\r\n  const [errorInput, setErrorInput] = useState(false);\r\n  const [click, setClick] = useState(false);\r\n  const [mensajeModal, setMensajeModal] = useState(\"\");\r\n\r\n  const [entidad, setEntidad] = useState({\r\n    estado: \"\",\r\n    municipio: \"\"\r\n  })\r\n\r\n  const [inputEsMuni, setInputEsMuni] = useState({\r\n    estados: {},\r\n    ciudades: {}\r\n  })\r\n\r\n  const [optionsKeyboard, setOptionsKeyboard] = useState({\r\n    inpName: \"\",\r\n    layoName: \"default\",\r\n    name: \"\",\r\n    value: {\r\n        Nombre: \"\",\r\n        RFC: \"\",\r\n        Correo: \"\",\r\n        Celular: \"\",\r\n        Telefono: \"\", \r\n        Calle: \"\",\r\n        Numero: \"\",\r\n        Colonia: \"\",\r\n        CodigoP: \"\"\r\n    }\r\n  })\r\n\r\n  const refForm = useRef();\r\n\r\n  useEffect(() => {\r\n\r\n    if (typeof window !== 'undefined') {\r\n        //console.log('we are running on the client');\r\n\r\n        var datos = JSON.parse(localStorage.getItem(\"informacion\"));\r\n        var estado = datos.direccionCliente.state;\r\n        var municipio = datos.direccionCliente.city;\r\n\r\n        const paramLocal = {\r\n            ParamEstado: estado,\r\n            ParamMuni: municipio\r\n        }\r\n\r\n        Estados(paramLocal);\r\n\r\n        var direccionSplit = datos.direccionCliente.street.split(/[\",\"]+/);\r\n        var direccionReplace = direccionSplit[0].replace(/[0-9]/g, '');\r\n\r\n        var newName = datos.datosCliente.fullName.replace(/,/g, \" \");\r\n\r\n        //console.log(datos);\r\n\r\n        //8110808942\r\n        setOptionsKeyboard({\r\n            ...optionsKeyboard,\r\n            value: {\r\n                Nombre: newName,\r\n                RFC: datos.datosCliente.rfc,\r\n                Correo: datos.contactoCliente.email,\r\n                Celular: datos.contactoCliente.mobile,\r\n                Telefono: datos.contactoCliente.phone, \r\n                Calle: direccionReplace,\r\n                Numero: datos.direccionCliente.number,\r\n                Colonia: datos.direccionCliente.street2,\r\n                CodigoP: datos.direccionCliente.postalCode\r\n            }\r\n        })\r\n\r\n\r\n    } else {\r\n        //console.log('we are running on the server');\r\n    }\r\n    \r\n  }, [])\r\n\r\n  function Estados(data){\r\n    var miCadena = data.ParamEstado?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\r\n    var datos = miCadena || \"nuevo leon\";\r\n    var minusculas = datos.toLowerCase();\r\n\r\n    var cadenaMuni = data.ParamMuni.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\r\n    var minusculaMuni = cadenaMuni.toLowerCase();\r\n\r\n    api.getMunicipios(minusculas).then((respEst) => {\r\n\r\n        //console.log(\"Tengo los estados: \", respEst);\r\n\r\n        const mapEstado = respEst.estados.map((obj) => {\r\n            var minusEstados = obj.toLowerCase();\r\n            var normaEstados = minusEstados?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\r\n\r\n            if(normaEstados === minusculas){\r\n                return obj;\r\n            } else {\r\n            }\r\n        });\r\n\r\n        var filterEstado = mapEstado.filter(function(x) {\r\n            return x !== undefined;\r\n        });\r\n\r\n        const mapMunicipio = respEst.ciudades.map((obj) => {\r\n            var minusMun = obj.toLowerCase();\r\n            var normaMuni = minusMun?.normalize(\"NFD\").replace(/[^a-zA-Z0-9 ]/g, '');\r\n\r\n            if(normaMuni === minusculaMuni){\r\n                return obj;\r\n            } else {\r\n            }\r\n        \r\n        })\r\n\r\n        var filterMunicipio = mapMunicipio.filter(function(x) {\r\n            return x !== undefined;\r\n        });\r\n\r\n        setEntidad({\r\n            ...entidad,\r\n            estado: filterEstado[0],\r\n            municipio: filterMunicipio[0]\r\n        })\r\n\r\n        setInputEsMuni({\r\n            ...inputEsMuni,\r\n            estados: respEst.estados,\r\n            ciudades: respEst.ciudades\r\n        });\r\n    })\r\n  }\r\n\r\n  function guardarCambios(){\r\n\r\n    var params = {\r\n        Nombre: optionsKeyboard.value.Nombre,\r\n        RFC: optionsKeyboard.value.RFC,\r\n        Correo: optionsKeyboard.value.Correo,\r\n        Celular: optionsKeyboard.value.Celular,\r\n        Telefono: optionsKeyboard.value.Telefono,\r\n        Calle: optionsKeyboard.value.Calle,\r\n        Numero: optionsKeyboard.value.Numero,\r\n        Colonia: optionsKeyboard.value.Colonia,\r\n        CodigoP: optionsKeyboard.value.CodigoP,\r\n        Estado: entidad.estado,\r\n        Municipio: entidad.municipio\r\n    }\r\n    \r\n    val.ValidadorCamposFacturacion(params).then((resp) => {\r\n        //console.log(\"Tengo la respuesta: \", resp)\r\n        if(resp === 5){\r\n            api.getEditarDatos(params)\r\n            .then((respApi) => {\r\n                setModal(true);\r\n                setError(14);\r\n                setMensajeModal(\r\n                    <center>\r\n                        <div>✅ Los cambios se han guardado correctamente</div>\r\n                    </center>\r\n                )\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setModal(true);\r\n                setError(7);\r\n            });\r\n          } else {\r\n            setModal(true);\r\n            setError(resp);\r\n          }\r\n    });\r\n  }\r\n\r\n  function continuar(){\r\n    navigate(\"/servicio-a-realizar\")\r\n  }\r\n\r\n  return (\r\n    <Layout backUrl={\"/datos-actuales\"}>\r\n      <Seo title=\"Auto servicio\" />\r\n        <Container className=\"container-sin-cita\" onClick={() => {setClick(true)}}>\r\n        {<Timer click={click} setClick={setClick} setError={setError} setModal={setModal}/>}\r\n            <Row className=\"row-cita-arriba\">\r\n                <div className=\"container-cita\">\r\n                    <Row>\r\n                        <Col className=\"titulo-cita\"><h1 className=\"titulo-h1\" style={{marginTop: '0.8rem', marginBottom: 0}}>Datos de Facturación</h1></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"titulo-cita\"><p className=\"texto-gris\" style={{marginBottom: 0, marginTop: 0}}>Puedes editar tus datos actuales o simplemente omitir este paso.</p></Col>\r\n                    </Row>\r\n                    <Row className=\"titulo-cita\">\r\n                        <h3 className=\"titulo-h1\" style={{marginTop: '0.5rem', marginBottom: '0.5rem'}}>Cliente</h3>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col lg={3}>\r\n                                    Nombre completo:\r\n                                    <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Nombre\"})}\r\n                                        value={optionsKeyboard.value.Nombre || \"\"}\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    RFC:\r\n                                    <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"vin\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"RFC\"})}\r\n                                        value={optionsKeyboard.value.RFC || \"\"}\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={3}>\r\n                                    Correo electrónico:\r\n                                    <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Correo\"})}\r\n                                        value={optionsKeyboard.value.Correo || \"\"}\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    Celular:\r\n                                    <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Celular\"})}\r\n                                        value={optionsKeyboard.value.Celular || \"\"}\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    Teléfono:\r\n                                    <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Telefono\"})}\r\n                                        value={optionsKeyboard.value.Telefono || \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Row>\r\n                    <Row className=\"titulo-cita\">\r\n                        <h3 className=\"titulo-h1\" style={{marginTop: '0.5rem', marginBottom: '0.5rem'}}>Domicilio</h3>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col lg={2}>\r\n                                    Calle:\r\n                                    <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Calle\"})}\r\n                                        value={optionsKeyboard.value.Calle || \"\"}\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    Número:\r\n                                    <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Numero\"})}\r\n                                        value={optionsKeyboard.value.Numero || \"\"}\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    Colonia:\r\n                                    <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Colonia\"})}\r\n                                        value={optionsKeyboard.value.Colonia || \"\"}\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    <div style={{paddingBottom:10}}>Estado: </div>\r\n                                    <Form.Select\r\n                                        aria-label=\"Default select example\"\r\n                                        id=\"inputContacto\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                            const paramLocal = {\r\n                                                ParamEstado: e.target.value,\r\n                                                ParamMuni: \"\"\r\n                                            }\r\n\r\n                                            Estados(paramLocal);\r\n                                        }}\r\n                                        value={entidad.estado}\r\n                                    >\r\n                                        <option value=\"Selecciona\">Seleccionar</option>\r\n                                        {inputEsMuni && inputEsMuni.estados && inputEsMuni.estados.length > 0 ? (\r\n                                            inputEsMuni.estados.map((obj, i) => {\r\n                                                ////console.log(\"Tengo: \", obj);\r\n                                                return(\r\n                                                    <>\r\n                                                        <option value={obj}>{obj}</option>\r\n                                                    </>\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                        }\r\n                                    </Form.Select>\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    <div style={{paddingBottom:10}}>Municipio: </div>\r\n                                    <Form.Select\r\n                                        aria-label=\"Default select example\"\r\n                                        id=\"inputContacto\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                            setEntidad({\r\n                                                ...entidad,\r\n                                                municipio: e.target.value\r\n                                            })\r\n                                        }}\r\n                                        value={entidad.municipio}\r\n                                    >\r\n                                        <option value=\"Selecciona\">Seleccionar</option>\r\n                                        {inputEsMuni && inputEsMuni.ciudades && inputEsMuni.ciudades.length > 0 ? (\r\n                                            inputEsMuni.ciudades.map((obj, i) => {\r\n                                                //console.log(\"Tengo: \", obj);\r\n                                                return(\r\n                                                    <>\r\n                                                        <option value={obj}>{obj}</option>\r\n                                                    </>\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                        }\r\n                                    </Form.Select>\r\n                                </Col>\r\n                                <Col lg={2}>\r\n                                    Código postal:\r\n                                    <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={errorInput === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"CodigoP\"})}\r\n                                        value={optionsKeyboard.value.CodigoP || \"\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Row>\r\n\r\n                    <Row className=\"titulo-cita p-3\">\r\n                        <Button onClick={() => {guardarCambios()}} className=\"btn-celeste-guardar\">Guardar</Button>\r\n                    </Row>\r\n\r\n                    <Button ref={refForm} onClick={() => continuar()} style={{display: 'none'}}></Button>\r\n                    {show === true ? \r\n                        <center className=\"pt-2\">\r\n                            <Keyboards options={optionsKeyboard} setOptionsKeyboard={setOptionsKeyboard} optionsKeyboard={optionsKeyboard}/>\r\n                        </center>\r\n                    : null }\r\n                </div>\r\n            </Row>\r\n            <Row className=\"row-cita-abajo\">\r\n              <VideoSeccion refForm={refForm} none=\"tiene\"/>\r\n            </Row>\r\n        </Container>\r\n        <ModalEmergente modal={modal} setModal={setModal} error={error} setClick={setClick} mensajeModal={mensajeModal}/>\r\n    </Layout>\r\n  )\r\n}"],"names":["Validador","ValidadorWhatsApp","data","nuevaData","nuevaBoolean","undefined","length","params","boolean","ValidadorCorreo","test","ValidadorVIN","console","log","ValidadorRFC","RFC","Regimen","nuevaBooleanRFC","nuevaBooleanRegimen","booleanRFC","booleanRegimen","ValidadorGenero","ValidadorNombre","ValidadorCamposFacturacion","Calle","Celular","Colonia","Correo","Nombre","Telefono","CodigoP","ValidadorCamposNuevoUsuario","jijiData","this","ValNombre","ValCorreo","VaCelular","VaRFC","Genero","VaGenero","ValCalle","Numero","ValNumero","ValColonia","CPostal","ValCPostal","error","nombre","correo","celular","rfc","genero","calle","numero","colonia","cpostal","ValidadorCamposDatosAutos","ErrorJiji","Color","valColor","Anio","valAnio","VINDatos","valVIN","Placas","valPlacas","Kilometraje","valKilometraje","color","anio","vin","placas","kilometraje","_val","module","exports","instance","DatosFacturacion","useState","show","setShow","modal","setModal","setError","errorInput","click","setClick","mensajeModal","setMensajeModal","estado","municipio","entidad","setEntidad","estados","ciudades","inputEsMuni","setInputEsMuni","inpName","layoName","name","value","optionsKeyboard","setOptionsKeyboard","refForm","useRef","Estados","minusculas","ParamEstado","normalize","replace","toLowerCase","minusculaMuni","ParamMuni","api","then","respEst","filterEstado","map","obj","minusEstados","filter","x","filterMunicipio","minusMun","useEffect","window","datos","JSON","parse","localStorage","getItem","direccionCliente","state","city","direccionReplace","street","split","newName","datosCliente","fullName","contactoCliente","email","mobile","phone","number","street2","postalCode","backUrl","title","className","onClick","style","marginTop","marginBottom","lg","autoComplete","type","id","onFocus","paddingBottom","onChange","e","target","i","Estado","Municipio","val","resp","respApi","catch","ref","navigate","display","options","none"],"sourceRoot":""}