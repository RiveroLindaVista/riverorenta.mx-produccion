{"version":3,"file":"component---src-pages-registrar-vehiculo-js-57b00157982efd44db6c.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/validadores.js","webpack://gatsby-starter-default/./src/pages/registrar-vehiculo.js"],"sourcesContent":["class Validador {\r\n    static _val = null\r\n\r\n    static get instance() {\r\n    if (Validador._val === null) {\r\n        Validador._val = new Validador()\r\n    }\r\n    return Validador._val\r\n    }\r\n    constructor() {\r\n\r\n    }\r\n\r\n    async ValidadorWhatsApp(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n\r\n        if(data === undefined || data === \"\"){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            if(data.length === 10){\r\n                nuevaData = 5;\r\n                nuevaBoolean = false;\r\n            } else {\r\n                nuevaData = 2;\r\n                nuevaBoolean = true;\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n        return params;\r\n    }\r\n\r\n    async ValidadorCorreo(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n        if(data === undefined || data === \"\"){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            let regexEmail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\r\n            let email = regexEmail.test(data);\r\n            if(email === true){\r\n                nuevaData = 5;\r\n                nuevaBoolean = false;\r\n            } else {\r\n                nuevaData = 1;\r\n                nuevaBoolean = true;\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    async ValidadorVIN(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n        console.log(\"Entra validador\")\r\n        if(data === undefined || data === \"\"){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            if(data.length === 8){\r\n                nuevaData = 5;\r\n                nuevaBoolean = false;\r\n            } else {\r\n                nuevaData = 3;\r\n                nuevaBoolean = true;\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n        return params;\r\n    }\r\n\r\n    async ValidadorRFC(RFC, Regimen){\r\n        let nuevaData = 0;\r\n        let nuevaBooleanRFC = false;\r\n        let nuevaBooleanRegimen = false;\r\n\r\n        if(Regimen === \"Selecciona\"){\r\n            nuevaData = 8;\r\n            nuevaBooleanRegimen = true;\r\n        } else if (Regimen === \"Física\") {\r\n            nuevaBooleanRegimen = false;\r\n            if(RFC === \"\" || RFC === undefined){\r\n                console.log(\"llega aquí vacio\")\r\n                nuevaData = 0;\r\n                nuevaBooleanRFC = true;\r\n            } else {\r\n                console.log(\"llega aquí tiene valores\")\r\n                if(RFC.length === 13){\r\n                    nuevaData = 5;\r\n                    nuevaBooleanRFC = false;\r\n                } else {\r\n                    nuevaData = 9;\r\n                    nuevaBooleanRFC = true;\r\n                }\r\n            }\r\n        } else if (Regimen === \"Moral\") {\r\n            nuevaBooleanRegimen = false;\r\n            if(RFC === \"\" || RFC === undefined){\r\n                nuevaData = 0;\r\n                nuevaBooleanRFC = true;\r\n            } else {\r\n                if(RFC.length === 12){\r\n                    nuevaData = 5;\r\n                    nuevaBooleanRFC = false;\r\n                } else {\r\n                    nuevaData = 9;\r\n                    nuevaBooleanRFC = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            booleanRFC: nuevaBooleanRFC,\r\n            booleanRegimen: nuevaBooleanRegimen\r\n        }\r\n\r\n        return params;\r\n\r\n    }\r\n\r\n    async ValidadorGenero(data){\r\n        //console.log(\"Estamos en el ValidadorGenero: \", data);\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n\r\n        if(data === \"Selecciona\"){\r\n            nuevaData = 8;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            nuevaData = 5;\r\n            nuevaBoolean = false;\r\n        }\r\n\r\n        let params = {\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean\r\n        }\r\n        return params;\r\n    }\r\n\r\n    async ValidadorNombre(data){\r\n        let nuevaData = 0;\r\n        let nuevaBoolean = false;\r\n\r\n        if(data === \"\" || data === undefined){\r\n            nuevaData = 0;\r\n            nuevaBoolean = true;\r\n        } else {\r\n            nuevaData = 5;\r\n            nuevaBoolean = false;\r\n        }\r\n\r\n        let params ={\r\n            data: nuevaData,\r\n            boolean: nuevaBoolean,\r\n        }\r\n        return params\r\n    }\r\n\r\n    // Validador de campos tipo formularios\r\n    async ValidadorCamposFacturacion(data){\r\n        let nuevaData = 0;\r\n        //console.log(\"Recibo lo siguiente aquí\", data);\r\n\r\n        if(data.Calle === \"\" || data.Celular === \"\" || data.Colonia === \"\" || data.Correo === \"\" || data.Nombre === \"\" || data.RFC === \"\" || data.Telefono === \"\"|| data.CodigoP === \"\"){\r\n            nuevaData = 0;\r\n        } else {\r\n            nuevaData = 5;\r\n        }\r\n\r\n        return nuevaData;\r\n    }\r\n\r\n    async ValidadorCamposNuevoUsuario(data){\r\n        let jijiData = 5;\r\n\r\n        let ValNombre = await this.ValidadorNombre(data.Nombre);\r\n        let ValCorreo = await this.ValidadorCorreo(data.Correo);\r\n        let VaCelular = await this.ValidadorWhatsApp(data.Celular);\r\n        let VaRFC = await this.ValidadorRFC(data.RFC, data.Regimen);\r\n        let VaGenero = await this.ValidadorGenero(data.Genero);\r\n\r\n        let ValCalle = await this.ValidadorNombre(data.Calle);\r\n        let ValNumero = await this.ValidadorNombre(data.Numero);\r\n        let ValColonia = await this.ValidadorNombre(data.Colonia);\r\n        let ValCPostal = await this.ValidadorNombre(data.CPostal);\r\n\r\n        if(ValNombre.data === 0 || ValCorreo.data === 0 || VaCelular.data === 0 || VaRFC.data === 0 || ValCalle.data === 0 || ValNumero.data === 0 || ValColonia.data === 0 || ValCPostal.data === 0){\r\n            jijiData = 0;\r\n        } else {\r\n            if(ValCorreo.data === 1){ jijiData = ValCorreo.data; } \r\n            else if(VaCelular.data === 2) { jijiData = VaCelular.data; }\r\n            else if(VaRFC.data === 8 || VaRFC.data === 9) { jijiData = VaRFC.data; }\r\n            else if(VaGenero.data === 8) { jijiData = VaGenero.data; }\r\n        } \r\n\r\n        let nuevaData = {\r\n            error: jijiData,\r\n            nombre: ValNombre,\r\n            correo: ValCorreo,\r\n            celular: VaCelular,\r\n            rfc: VaRFC,\r\n            genero: VaGenero,\r\n            calle: ValCalle,\r\n            numero: ValNumero,\r\n            colonia: ValColonia,\r\n            cpostal: ValCPostal\r\n        };\r\n\r\n        return nuevaData;\r\n    }\r\n\r\n    async ValidadorCamposDatosAutos(data){\r\n        //console.log(\"Tengo lo siguiente jiji, \", data);\r\n        let ErrorJiji = 0;\r\n\r\n        let valColor = await this.ValidadorNombre(data.Color);\r\n        let valAnio = await this.ValidadorNombre(data.Anio);\r\n        let valVIN = await this.ValidadorNombre(data.VINDatos);\r\n        let valPlacas = await this.ValidadorNombre(data.Placas);\r\n        let valKilometraje = await this.ValidadorNombre(data.Kilometraje);\r\n\r\n        if(valColor.data === 0 || valAnio.data === 0 || valVIN.data === 0 || valPlacas.data === 0 || valKilometraje.data === 0) {\r\n            ErrorJiji = 0;\r\n        } else {\r\n            ErrorJiji = 5;\r\n        }\r\n\r\n        let params = {\r\n            error: ErrorJiji,\r\n            color: valColor,\r\n            anio: valAnio,\r\n            vin: valVIN,\r\n            placas: valPlacas,\r\n            kilometraje: valKilometraje,\r\n        }\r\n\r\n        return params;\r\n\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Validador.instance","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Col, Row, Container, Button, Form } from \"react-bootstrap\";\r\nimport { navigate } from \"gatsby\";\r\n\r\nimport \"../components/pages-css/sCita.css\";\r\nimport val from \"../components/validadores\";\r\nimport Layout from \"../components/layout.js\";\r\nimport Seo from \"../components/seo\";\r\nimport VideoSeccion from \"../components/videoSeccion.js\";\r\nimport ModalEmergente from \"../components/ModalEmergente.js\";\r\nimport Keyboards from \"../components/Keyboards.js\";\r\nimport Timer from \"../components/timer.js\";\r\nimport api from \"../components/actions/riveroapi.js\";\r\n\r\nexport default function RegistrarVehiculo(){\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [modal, setModal] = useState(false);\r\n    const [errorInput, setErrorInput] = useState(false);\r\n    const [error, setError] = useState(0);\r\n    const [click, setClick] = useState(false);\r\n    const [modelitos, getModelitos] = useState();\r\n    const [modeo, setModeo] = useState();\r\n\r\n    const [formInputError, setFormInputError] = useState({\r\n        Modelo: false,\r\n        Color: false,\r\n        Anio: false,\r\n        VINDatos: false,\r\n        Placas: false,\r\n        Kilometraje: false\r\n    })\r\n\r\n    const [optionsKeyboard, setOptionsKeyboard] = useState({\r\n        inpName: \"\",\r\n        layoName: \"default\",\r\n        name: \"\",\r\n        value: {\r\n            Modelo: undefined,\r\n            Color: undefined,\r\n            Anio: undefined,\r\n            VINDatos: undefined,\r\n            Placas: undefined,\r\n            Kilometraje: undefined,\r\n        }\r\n    })\r\n\r\n    const [datoscliente, setDatosCliente] = useState({})\r\n\r\n    const refForm = useRef();\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== 'undefined') {\r\n            //console.log('we are running on the client', JSON.parse(localStorage.getItem(\"informacion\")));\r\n            setOptionsKeyboard({\r\n              ...optionsKeyboard,\r\n              value: {\r\n                Modelo: localStorage.getItem('Modelo') || \"\",\r\n                Color: localStorage.getItem('Modelo') || \"\",\r\n                Anio: localStorage.getItem('Anio') || \"\",\r\n                VINDatos: localStorage.getItem('VINDatos') || \"\",\r\n                Placas: localStorage.getItem('Placas') || \"\",\r\n                Kilometraje: localStorage.getItem('Kilometraje') || \"\",\r\n              }\r\n            });\r\n\r\n            let informacion = JSON.parse(localStorage.getItem(\"informacion\"))\r\n\r\n            setDatosCliente({\r\n                ...datoscliente,\r\n                data: {},\r\n                id: 0,\r\n                codigo: 0,\r\n                datosCliente: {\r\n                    Nombre: informacion.datosCliente.Nombre,\r\n                    RFC: informacion.datosCliente.RFC,\r\n                    DiaNacimiento: informacion.datosCliente.DiaNacimiento,\r\n                },\r\n                direccionCliente: {\r\n                    Calle: informacion.direccionCliente.Calle,\r\n                    Numero: informacion.direccionCliente.Numero,\r\n                    Colonia: informacion.direccionCliente.Colonia,\r\n                    CodigoPostal: informacion.direccionCliente.CodigoPostal,\r\n                    Estado: informacion.direccionCliente.Estado,\r\n                    Municipio: informacion.direccionCliente.Municipio,\r\n                    Pais: \"MEXICO\"\r\n                },\r\n                clienteContacto: {\r\n                    Celular: informacion.clienteContacto.Celular,\r\n                    Telefono: informacion.clienteContacto.Telefono,\r\n                    Correo: informacion.clienteContacto.Correo,\r\n                    Preferencia: \"WhatsApp\"\r\n                },\r\n            })\r\n        } else {\r\n            //console.log('we are running on the server');\r\n        }\r\n        api.getModelos().then((resp) => getModelitos(resp.data))\r\n    }, [])\r\n\r\n    const doubled = modelitos?.map((obj, i) => {\r\n        ////console.log(\"Tengo esto, \", obj.modelo)\r\n        return(\r\n            <option key={i} value={obj.modelo}>{obj.modelo}</option>\r\n        )\r\n    });\r\n\r\n    function continuar(){\r\n\r\n        let params = {\r\n            Color: optionsKeyboard.value.Color,\r\n            Anio: optionsKeyboard.value.Anio,\r\n            VINDatos: optionsKeyboard.value.VINDatos,\r\n            Placas: optionsKeyboard.value.Placas,\r\n            Kilometraje: optionsKeyboard.value.Kilometraje\r\n        }\r\n\r\n        val.ValidadorCamposDatosAutos(params).then((resp) => {\r\n\r\n            setFormInputError({\r\n                Color: resp.color.boolean,\r\n                Anio: resp.anio.boolean,\r\n                VINDatos: resp.vin.boolean,\r\n                Placas: resp.placas.boolean,\r\n                Kilometraje: resp.kilometraje.boolean\r\n            })\r\n\r\n            if(resp.error === 0){\r\n                setError(resp.error);\r\n                setModal(true);\r\n            } else if (resp.error === 5) {\r\n\r\n                const parametrosNuevos = {\r\n                    data: {\r\n                        Marca: \"Chevrolet\",\r\n                        Modelo: modeo,\r\n                        Color: optionsKeyboard.value.Color,\r\n                        Anio: optionsKeyboard.value.Anio,\r\n                        VINDatos: optionsKeyboard.value.VINDatos,\r\n                        Placas: optionsKeyboard.value.Placas,\r\n                        Kilometraje: optionsKeyboard.value.Kilometraje,\r\n                    },\r\n                    id: 0,\r\n                    codigo: 0,\r\n                    datosCliente: {\r\n                        Nombre: datoscliente.datosCliente.Nombre,\r\n                        RFC: datoscliente.datosCliente.RFC,\r\n                        DiaNacimiento: datoscliente.datosCliente.DiaNacimiento,\r\n                    },\r\n                    direccionCliente: {\r\n                        Calle: datoscliente.direccionCliente.Calle,\r\n                        Numero: datoscliente.direccionCliente.Numero,\r\n                        Colonia: datoscliente.direccionCliente.Colonia,\r\n                        CodigoPostal: datoscliente.direccionCliente.CodigoPostal,\r\n                        Estado: datoscliente.direccionCliente.Estado,\r\n                        Municipio: datoscliente.direccionCliente.Municipio,\r\n                        Pais: \"MEXICO\"\r\n                    },\r\n                    clienteContacto: {\r\n                        Celular: datoscliente.clienteContacto.Celular,\r\n                        Telefono: datoscliente.clienteContacto.Telefono,\r\n                        Correo: datoscliente.clienteContacto.Correo,\r\n                        Preferencia: \"WhatsApp\"\r\n                    },\r\n                }\r\n                \r\n                navigate(\"/servicio-a-realizar\")\r\n                localStorage.setItem('informacion', JSON.stringify(parametrosNuevos));\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    return(\r\n        <Layout backUrl={\"/nuevo-usuario\"}>\r\n            <Seo title=\"Auto servicio\" />\r\n            <Container className=\"container-sin-cita\" onClick={() => {setClick(true)}}>\r\n            {<Timer click={click} setClick={setClick} setError={setError} setModal={setModal}/>}\r\n                <Row className=\"row-cita-arriba\">\r\n                    <form className=\"container-cita\">\r\n                        <Row>\r\n                            <Col className=\"titulo-cita\"><h1 className=\"titulo-h1\">Datos del auto</h1></Col>\r\n                        </Row>\r\n                        <Row className=\"titulo-cita\">\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col lg={3}>\r\n                                        Marca:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.Nombreform === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        disabled\r\n                                        placeholder=\"Chevrolet\"\r\n                                        className=\"form-control\"\r\n                                        />\r\n                                    </Col>\r\n                                    <Col lg={3}>\r\n                                    <div style={{paddingBottom:10}}>Modelo: </div>\r\n                                        <Form.Select id={\"inputContacto\"} onChange={(e) => {setModeo(e.target.value)}}>\r\n                                            <option>Seleccionar modelo</option>\r\n                                            {doubled}\r\n                                        </Form.Select>\r\n                                    </Col>\r\n                                    <Col lg={3}>\r\n                                        Color:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.Color === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"default\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Color\"})}\r\n                                        value={optionsKeyboard.value.Color || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col lg={3}>\r\n                                        Año:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.Anio === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Anio\"})}\r\n                                        value={optionsKeyboard.value.Anio || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col lg={3}>\r\n                                        VIN:\r\n                                        <input\r\n                                            autoComplete=\"off\"\r\n                                            type=\"text\"\r\n                                            id={formInputError.VINDatos === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                            className=\"form-control\"\r\n                                            onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"vin\"}) }}\r\n                                            onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"VINDatos\"})}\r\n                                            value={optionsKeyboard.value.VINDatos || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col lg={3}>\r\n                                        Placas:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.Placas === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"vin\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Placas\"})}\r\n                                        value={optionsKeyboard.value.Placas || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col lg={3}>\r\n                                        Kilometraje:\r\n                                        <input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id={formInputError.Kilometraje === true ? \"inputContactoError\" : \"inputContacto\"}\r\n                                        className=\"form-control\"\r\n                                        onClick={() => {setShow(true); setOptionsKeyboard({...optionsKeyboard, layoName: \"phone\"}) }}\r\n                                        onFocus={() => setOptionsKeyboard({...optionsKeyboard, inpName: \"Kilometraje\"})}\r\n                                        value={optionsKeyboard.value.Kilometraje || \"\"}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col lg={3}></Col>\r\n                                </Row>\r\n                                {show === true ?\r\n                                    <center className=\"pt-5\">\r\n                                        <Keyboards options={optionsKeyboard} setOptionsKeyboard={setOptionsKeyboard} optionsKeyboard={optionsKeyboard}/>\r\n                                    </center>\r\n                                : null }\r\n                            </Container>\r\n                        </Row>\r\n                    </form>\r\n                </Row>\r\n                <Button ref={refForm} onClick={() => continuar()} style={{display: 'none'}}></Button>\r\n                <Row className=\"row-cita-abajo\">\r\n                    <VideoSeccion refForm={refForm} none=\"tiene\"/>\r\n                </Row>\r\n            </Container>\r\n            <ModalEmergente modal={modal} error={error} setModal={setModal} setClick={setClick}/>\r\n        </Layout>\r\n    )\r\n\r\n}"],"names":["Validador","ValidadorWhatsApp","data","nuevaData","nuevaBoolean","undefined","length","params","boolean","ValidadorCorreo","test","ValidadorVIN","console","log","ValidadorRFC","RFC","Regimen","nuevaBooleanRFC","nuevaBooleanRegimen","booleanRFC","booleanRegimen","ValidadorGenero","ValidadorNombre","ValidadorCamposFacturacion","Calle","Celular","Colonia","Correo","Nombre","Telefono","CodigoP","ValidadorCamposNuevoUsuario","jijiData","this","ValNombre","ValCorreo","VaCelular","VaRFC","Genero","VaGenero","ValCalle","Numero","ValNumero","ValColonia","CPostal","ValCPostal","error","nombre","correo","celular","rfc","genero","calle","numero","colonia","cpostal","ValidadorCamposDatosAutos","ErrorJiji","Color","valColor","Anio","valAnio","VINDatos","valVIN","Placas","valPlacas","Kilometraje","valKilometraje","color","anio","vin","placas","kilometraje","_val","module","exports","instance","RegistrarVehiculo","useState","show","setShow","modal","setModal","setError","click","setClick","modelitos","getModelitos","modeo","setModeo","Modelo","formInputError","setFormInputError","inpName","layoName","name","value","optionsKeyboard","setOptionsKeyboard","datoscliente","setDatosCliente","refForm","useRef","useEffect","window","localStorage","getItem","informacion","JSON","parse","id","codigo","datosCliente","DiaNacimiento","direccionCliente","CodigoPostal","Estado","Municipio","Pais","clienteContacto","Preferencia","api","then","resp","doubled","map","obj","i","key","modelo","backUrl","title","className","onClick","lg","autoComplete","type","Nombreform","disabled","placeholder","style","paddingBottom","onChange","e","target","onFocus","options","ref","val","parametrosNuevos","Marca","navigate","setItem","stringify","display","none"],"sourceRoot":""}